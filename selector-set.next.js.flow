/* @flow strict */

declare class SelectorSet<T> {
  static (): SelectorSet<T>;
  constructor(): void;

  size: number;

  matchesSelector: (el: Element, selector: string) => boolean;
  querySelectorAll: (selectors: string, context: Element) => Array<Element>;

  indexes: Array<{
    name: string,
    selector: (selector: string) => ?string,
    element: (el: Element) => ?Array<string>
  }>;

  add(selector: string, data: T): void;
  remove(selector: string, data?: T): void;

  matches(el: Element): Array<{ selector: string, data: T }>;
  queryAll(
    context: Element
  ): Array<{ selector: string, data: T, elements: Array<Element> }>;

  logDefaultIndexUsed: ({ selector: string, data: T }) => void;
}

declare module.exports: typeof SelectorSet;
